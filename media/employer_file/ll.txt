import { configureStore } from '@reduxjs/toolkit';
import userReducer from '../features/userSlice';

export const store = configureStore({
  reducer: {
    user: userReducer,
  },
});

store.js
---
import { createSlice } from '@reduxjs/toolkit';
import { fetchCount } from './counter/counterAPI';

const initialState = {
  value: 0,
  status: 'idle',
};



export const userSlice = createSlice({
  name: 'user',
  initialState:{
    user:null,
  },
  reducers: {
    login: (state,action) => {
      state.user  = action.payload;
    },
    
    logout: (state) => {
      state.user = null;
    },
  },
  
});

export const { login,logout } = userSlice.actions;

export const selectUser = (state) => state.user.user;



export default userSlice.reducer;

userSlice.js
---

import React, { useEffect } from 'react';
import './App.css';
import Header from './Header';
import Sidebar from './Sidebar';
import Feed from './Feed';
import { useDispatch,useSelector } from 'react-redux';
import { login, logout, selectUser } from './features/userSlice';
import Login from './Login';
import { auth } from './firebase';
import Widgets from './Widgets';

function App() {
  const user = useSelector(selectUser);
  const dispatch =useDispatch();

  useEffect(() =>{
    auth.onAuthStateChanged((userAuth) => {
      if (userAuth){
        dispatch(login({
          email: userAuth.email,
          uid: userAuth.uid,
          displayName: userAuth.displayName,
          photoUrl: userAuth.photoURL,
        }))
      } else{
        dispatch(logout());
      }
    });
  }, []);



  return (
    <div className="App">
      <Header/>

    


      {!user ? (
        <Login/>
      ) :(

        <div className='appbody'>
        <Sidebar/>
        <Feed/>
        <Widgets/>
        </div>
      ) }



     
    </div>
  );
}

export default App;
----
import React, { useEffect } from 'react';
import './Feed.css';
import CreateIcon from '@mui/icons-material/Create';
import InputOption from './InputOption';
import ImageIcon from '@mui/icons-material/Image';
import VideoLibraryIcon from '@mui/icons-material/VideoLibrary';
import EventIcon from '@mui/icons-material/Event';
import ArticleIcon from '@mui/icons-material/Article';
import Post from './Post';

import { useState } from 'react';
import { db } from './firebase';
import { serverTimestamp } from 'firebase/firestore';
import { useSelector } from 'react-redux';
import { selectUser } from './features/userSlice';

function Feed() {
  const user = useSelector(selectUser);

  const [posts, setPosts] = useState([]);
  const [input, setInput] = useState('');

  useEffect(() => {
    db.collection('posts')
      .orderBy('timestamp', 'desc')
      .onSnapshot((snapshot) => {
        setPosts(
          snapshot.docs.map((doc) => ({
            id: doc.id,
            data: doc.data(),
          }))
        );
      });
  }, []);

  const sendPost = (e) => {
    e.preventDefault();
  
    if (user && user.name) {
      const postData = {
        name: user.name,
        message: input,
        timestamp: serverTimestamp(),
      };
  
      if (user.photoUrl) {
        postData.photoUrl = user.photoUrl;
      }
  
      if (user.description) {
        postData.description = user.description;
      }
  
      db.collection('posts').add(postData);
      setInput('');
    } else {
      console.error('User name is undefined');
    }
  };
  return (
    <div className="feed">
      <div className="feed_inputcont">
        <div className="feed_input">
          <CreateIcon />
          <form>
            <input
              value={input}
              onChange={(e) => setInput(e.target.value)}
              type="text"
            />
            <button onClick={sendPost} type="submit" />
          </form>
        </div>
        <div className="feed_inputoptions">
          <InputOption Icon={ImageIcon} title={'Photo'} color="#70B5F9" />
          <InputOption Icon={VideoLibraryIcon} title={'Video'} color="#0B6P97" />
          <InputOption Icon={EventIcon} title={'Event'} color="#C0CBCD" />
          <InputOption Icon={ArticleIcon} title={'Write Article'} color="green" />
        </div>
      </div>

      {posts.map(({ uid, data: { name, description, message, photoUrl } }) => (
        <Post
          key={uid}
          name={name}
          description={description}
          message={message}
          photoUrl={photoUrl}
        />
      ))}
    </div>
  );
}

export default Feed;
---
import firebase from 'firebase/compat/app';
import { getAuth } from 'firebase/auth';
import 'firebase/compat/firestore';

const firebaseConfig = {
  apiKey: "AIzaSyDE-jTgb2mAhcjdgNotLcggV65h6K6uzyo",
  authDomain: "emp-hub-6137a.firebaseapp.com",
  projectId: "emp-hub-6137a",
  storageBucket: "emp-hub-6137a.appspot.com",
  messagingSenderId: "437536824647",
  appId: "1:437536824647:web:98678a411f602e0461c062"
};

// Initialize Firebase
const firebaseApp = firebase.initializeApp(firebaseConfig);

// Access Firestore
const db = firebaseApp.firestore();

// Access Authentication
const auth = getAuth(firebaseApp);

export { db, auth };
----
import React, { useState } from 'react';
import './Login.css';
import { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'firebase/auth';
import { auth } from './firebase';
import { useDispatch } from 'react-redux';
import { login } from './features/userSlice';

function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [name, setName] = useState("");
  const [profilePic, setProfilePic] = useState("");
  const dispatch = useDispatch();

  const loginToApp = (e) => {
    e.preventDefault();
    signInWithEmailAndPassword(auth,email,password).then(
      (userAuth) => {
        dispatch(
          login({
            email: userAuth.user.email,
            uid:userAuth.user.uid,
            name: userAuth.user.name,
            profileUrl: userAuth.user.photoURL,
          })
        );
      }
    );
  };

  const register = () => {
    if (!name) {
      return alert("Please enter Full Name!");
    }

    createUserWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        const user = userCredential.user;
        updateProfile(user, {
            displayName: name,
            photoURL: profilePic,
        })
        .then(() => {
          dispatch(login({
            email: user.email,
            uid: user.uid,
            displayName: name,
            photoUrl: profilePic
          }));
        })
      })
      .catch((error) => alert(error));
  };

  return (
    <div className='login'>
      <img src="./Screenshot__5_-removebg-preview (2).png"/>

      <form>
        <input
          value={name} 
          onChange={(e) => setName(e.target.value)} 
          type='text' 
          placeholder='Full Name (if registering)'
        />
              
        <input 
          value={profilePic}
          onChange={(e) => setProfilePic(e.target.value)}
          type='text' 
          placeholder='Profile pic URL(optional)'
        />
            
        <input 
          value={email} 
          onChange={(e) => setEmail(e.target.value)}
          type='email'
          placeholder='Email'
        />
        
        <input
          value={password}
          onChange={(e) => setPassword(e.target.value)} 
          type='password' 
          placeholder='Password'
        />
        
        <button  type='submit' onClick={loginToApp} >Sign In</button>
      </form>
      
      <p>
        Not a Member?
        <span className='login_register' onClick={register}>Register Now</span>
      </p>
    </div>
  );
}

export default Login;
---
